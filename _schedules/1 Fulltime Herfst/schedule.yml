Welkom:
    Lees hier even rustig door de studiewijzer om te ontdekken hoe het vak in elkaar zit: /syllabus

Week 1:
    Monday (basics):
        'Development Environment [practice]': /basics/workshop
        'Lecture: HTML [theory]': /basics/html
        'Homepage part 1 [assignment]': /basics/homepage
    Tuesday (basics):
        'Lecture: Git [theory]': /basics/git
        'Git in a terminal [practice]': /basics/terminal
        'Homepage part 2 [assignment]': /basics/homepage
    Wednesday (SQL):
        'Markdown [assignment]': /basics/markdown
        "Lecture: SQL [theory]": /sql/lecture
    Thursday (SQL):
        "Movies [assignment]": /sql/movies
    Friday (SQL):
        "Fiftyville [assignment]": /sql/fiftyville

Week 2:
    Monday (data structures):
        Complexity [theory]: /data-structures/python/efficiency
        Complexity questions 1 [assignment]: /data-structures/questions1
        Dictionaries [theory]: /data-structures/python/dictionaries/use
        Dictionaries [practice]: /data-structures/python/dictionaries/use/practice
        Efficiency of dictionaries [theory]: /data-structures/python/dictionaries/complexity
        Efficiency of dictionaries [practice]: /data-structures/python/dictionaries/complexity/practice
        Tuples [theory]: /data-structures/python/tuples
        Sets [theory]: /data-structures/python/sets
        Sets [practice]: /data-structures/python/sets/practice
        List slicing and indexing [theory]: /data-structures/python/slicing
    Tuesday (data structures):
        Applying big O in your code [theory]: /data-structures/python/big-o
        Improving count_occurrence [theory]: /data-structures/python/big-o-example
        Complexity questions 2 [assignment]: /data-structures/questions2
        Jaccard [practice]: /data-structures/jaccard
        Indexing words [assignment]: /data-structures/word-index
    Wednesday (data analysis):
        Pandas [assignment]: "/scraping-data/pandas"
    Thursday (data analysis):
        Scraping part 1 [assignment]: "/scraping-data/scraping"
    Friday (data analysis):
        Scraping part 2 [assignment]: "/scraping-data/scraping"
    
Week 3:
    Monday (data analysis):
        Transforming [assignment]: "/scraping-data/transforming"
    Tuesday (data analysis):
        Visualizing [assignment]: "/scraping-data/visualizing"
    Wednesday (data analysis):
        Crawling [assignment]: "/scraping-data/crawling"
    Thursday (linters):
        Style [assignment]: "/code_tools/linters/style"
        Cyclomatic Complexity [assignment]: "/code_tools/linters/cyclomatic_complexity"
    Friday (type checkers):
        Theory [theory]: "/code_tools/type_checkers/theory"
        Assignment [assignment]: "/code_tools/type_checkers/type_hints"

Week 4:
    Monday (Testers):
        Theory [theory]: "/code_tools/testers/theory"
        Rotate [assignment]: "/code_tools/testers/rotate"
        Tennis [assignment]: "/code_tools/testers/tennis"
    Tuesday (Testers):
        Cash [assignment]: "/code_tools/testers/testing"
        Sudoku part 1 [assignment]: "/code_tools/profilers"
    Wednesday (Profilers):
        Sudoku part 2 [assignment]: "/code_tools/profilers"